# .github/workflows/release.yaml
name: release

on:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.x'

      - name: Run Static Checks
        run: go get honnef.co/go/tools/cmd/staticcheck && go install honnef.co/go/tools/cmd/staticcheck && staticcheck ./...
        
      - name: Run Tests
        run: go test -p 1 -cover -race -v ./...

  release:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Unshallow
        run: git fetch --prune --unshallow
        
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.x'
          
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-lambda:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            # repository: awslabs/ssosync
            # ref: ${{ github.event.release.tag_name }}
            # temporarily using my fork until group handling is fix in upstream
            repository: brokenbot/ssosync
            path: src/ssosync
        - uses: actions/setup-go@v2
          with:
            stable: 'true'
            go-version: '1.16'
        - run: cd src/ssosync && go build -o ../../main main.go
        - uses: montudor/action-zip@v0.1.1
          with: 
            args: zip -qq -r ssosync-lambda.zip main
        - name: release
          uses: fnkr/github-action-ghr@v1
          if: startsWith(github.ref, 'refs/tags/')
          env:
            GHR_PATH: ssosync-lambda.zip
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
