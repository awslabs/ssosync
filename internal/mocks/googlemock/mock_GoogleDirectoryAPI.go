// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: ../../google/client.go

// Package mock_google is a generated GoMock package.
package mock_google

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	admin "google.golang.org/api/admin/directory/v1"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetDeletedUsers mocks base method.
func (m *MockClient) GetDeletedUsers() ([]*admin.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeletedUsers")
	ret0, _ := ret[0].([]*admin.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDeletedUsers indicates an expected call of GetDeletedUsers.
func (mr *MockClientMockRecorder) GetDeletedUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeletedUsers", reflect.TypeOf((*MockClient)(nil).GetDeletedUsers))
}

// GetGroupMembers mocks base method.
func (m *MockClient) GetGroupMembers(arg0 *admin.Group) ([]*admin.Member, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroupMembers", arg0)
	ret0, _ := ret[0].([]*admin.Member)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGroupMembers indicates an expected call of GetGroupMembers.
func (mr *MockClientMockRecorder) GetGroupMembers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroupMembers", reflect.TypeOf((*MockClient)(nil).GetGroupMembers), arg0)
}

// GetGroups mocks base method.
func (m *MockClient) GetGroups(arg0 string) ([]*admin.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroups", arg0)
	ret0, _ := ret[0].([]*admin.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGroups indicates an expected call of GetGroups.
func (mr *MockClientMockRecorder) GetGroups(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroups", reflect.TypeOf((*MockClient)(nil).GetGroups), arg0)
}

// GetUsers mocks base method.
func (m *MockClient) GetUsers(arg0 string) ([]*admin.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers", arg0)
	ret0, _ := ret[0].([]*admin.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockClientMockRecorder) GetUsers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockClient)(nil).GetUsers), arg0)
}
